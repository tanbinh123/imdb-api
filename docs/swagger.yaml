consumes:
- application/json
definitions:
  pipe.BoxOfficeItem:
    properties:
      id:
        type: string
      thumbnail:
        type: string
      title:
        $ref: '#/definitions/pipe.BoxOfficeItemTitle'
      totalGross:
        type: string
      weekendGross:
        type: string
      weeksSinceRelease:
        type: string
    type: object
  pipe.BoxOfficeItemTitle:
    properties:
      slug:
        type: string
      text:
        type: string
    type: object
  pipe.BoxOfficeTransform:
    properties:
      titles:
        items:
          $ref: '#/definitions/pipe.BoxOfficeItem'
        type: array
    type: object
  pipe.Cast:
    properties:
      characters:
        items:
          type: string
        type: array
      episodeCredits:
        $ref: '#/definitions/pipe.CastEpisodeCredits'
      id:
        type: string
      image:
        $ref: '#/definitions/pipe.CastImage'
      name:
        type: string
      slug:
        type: string
    type: object
  pipe.CastEpisodeCredits:
    properties:
      total:
        type: integer
      years:
        $ref: '#/definitions/pipe.YearRange'
    type: object
  pipe.CastImage:
    properties:
      height:
        type: integer
      url:
        type: string
      width:
        type: integer
    type: object
  pipe.ChartCommonTransform:
    properties:
      titles:
        items:
          $ref: '#/definitions/pipe.ChartItem'
        type: array
        x-order: "002"
      type:
        type: string
        x-order: "001"
    type: object
  pipe.ChartItem:
    properties:
      id:
        type: string
        x-order: "001"
      rating:
        type: number
        x-order: "004"
      releaseYear:
        type: number
        x-order: "005"
      thumbnail:
        type: string
        x-order: "003"
      title:
        $ref: '#/definitions/pipe.ChartItemTitle'
        x-order: "002"
    type: object
  pipe.ChartItemTitle:
    properties:
      slug:
        type: string
      text:
        type: string
    type: object
  pipe.ChartMovieMeterItem:
    properties:
      id:
        type: string
        x-order: "001"
      rankingChange:
        description: Could be negative or positive number, determinate chart ranking
          change
        type: integer
        x-order: "005"
      rating:
        type: number
        x-order: "004"
      releaseYear:
        type: number
        x-order: "006"
      thumbnail:
        type: string
        x-order: "003"
      title:
        $ref: '#/definitions/pipe.ChartMovieMeterItemTitle'
        x-order: "002"
    type: object
  pipe.ChartMovieMeterItemTitle:
    properties:
      slug:
        type: string
        x-order: "002"
      text:
        type: string
        x-order: "001"
    type: object
  pipe.ChartMovieMeterTransform:
    properties:
      titles:
        items:
          $ref: '#/definitions/pipe.ChartMovieMeterItem'
        type: array
        x-order: "001"
    type: object
  pipe.CrazyCreditItem:
    properties:
      id:
        type: string
      text:
        type: string
    type: object
  pipe.ExternalReviews:
    properties:
      total:
        type: integer
    type: object
  pipe.FAQ:
    properties:
      items:
        description: a short list of FAQs as preview
        items:
          $ref: '#/definitions/pipe.FAQItem'
        type: array
      total:
        description: total number of keywords that are related to this title
        type: integer
    type: object
  pipe.FAQItem:
    properties:
      id:
        type: string
      question:
        type: string
    type: object
  pipe.FeaturedReviewItem:
    properties:
      author:
        $ref: '#/definitions/pipe.ReviewAuthor'
      createdAt:
        type: string
      dislikes:
        type: integer
      id:
        type: string
      likes:
        type: integer
      summary:
        type: string
      text:
        type: string
    type: object
  pipe.Genre:
    properties:
      name:
        type: string
      slug:
        description: can directly be used in advances search feature
        type: string
    type: object
  pipe.ImageItem:
    properties:
      caption:
        type: string
      height:
        type: integer
      id:
        type: string
      url:
        type: string
      width:
        type: integer
    type: object
  pipe.Images:
    properties:
      items:
        items:
          $ref: '#/definitions/pipe.ImageItem'
        type: array
      primary:
        $ref: '#/definitions/pipe.PrimaryImage'
      total:
        type: integer
    type: object
  pipe.IndexTransform:
    properties:
      cast:
        items:
          $ref: '#/definitions/pipe.Cast'
        type: array
        x-order: "009"
      faq:
        $ref: '#/definitions/pipe.FAQ'
        x-order: "011"
      genres:
        items:
          $ref: '#/definitions/pipe.Genre'
        type: array
        x-order: "004"
      id:
        type: string
        x-order: "001"
      images:
        $ref: '#/definitions/pipe.Images'
        x-order: "007"
      keywords:
        $ref: '#/definitions/pipe.Keywords'
        x-order: "013"
      plot:
        type: string
        x-order: "005"
      popularity:
        $ref: '#/definitions/pipe.Popularity'
        x-order: "006"
      related:
        description: list of related titles
        items:
          $ref: '#/definitions/pipe.RelatedTitle'
        type: array
        x-order: "016"
      reviews:
        $ref: '#/definitions/pipe.Reviews'
        x-order: "010"
      series:
        $ref: '#/definitions/pipe.Series'
        description: only when viewing an episode of a series
        x-order: "014"
      soundtracks:
        items:
          $ref: '#/definitions/pipe.Soundtrack'
        type: array
        x-order: "015"
      title:
        $ref: '#/definitions/pipe.Title'
        x-order: "003"
      trivia:
        $ref: '#/definitions/pipe.Trivia'
        x-order: "012"
      validate:
        $ref: '#/definitions/pipe.Validate'
        x-order: "002"
      videos:
        $ref: '#/definitions/pipe.Videos'
        x-order: "008"
    type: object
  pipe.Keywords:
    properties:
      items:
        description: a short list of keywords as preview
        items:
          type: string
        type: array
      total:
        description: total number of keywords that are related to this title
        type: integer
    type: object
  pipe.PlaybackItem:
    properties:
      mimeType:
        type: string
      quality:
        type: string
      url:
        type: string
    type: object
  pipe.Popularity:
    properties:
      difference:
        type: integer
      rank:
        type: integer
    type: object
  pipe.PrimaryImage:
    properties:
      caption:
        type: string
      height:
        type: integer
      id:
        type: string
      thumbnails:
        items:
          $ref: '#/definitions/pipe.PrimaryImageThumbnail'
        type: array
      url:
        type: string
      width:
        type: integer
    type: object
  pipe.PrimaryImageThumbnail:
    properties:
      url:
        type: string
      width:
        type: integer
    type: object
  pipe.Rating:
    properties:
      certificate:
        description: For example "TV-14"
        type: string
      count:
        description: Voters count
        type: integer
      score:
        description: IMDb score from 0 to 10 (includes precision)
        type: number
    type: object
  pipe.RelatedTitle:
    properties:
      canHaveEpisodes:
        type: boolean
      duration:
        description: unit is seconds
        type: integer
      genres:
        items:
          $ref: '#/definitions/pipe.Genre'
        type: array
      id:
        type: string
      poster:
        $ref: '#/definitions/pipe.RelatedTitlePoster'
      rating:
        $ref: '#/definitions/pipe.Rating'
      releaseYear:
        $ref: '#/definitions/pipe.YearRange'
      title:
        $ref: '#/definitions/pipe.RelatedTitleName'
      type:
        type: string
    type: object
  pipe.RelatedTitleName:
    properties:
      original:
        type: string
      slug:
        type: string
      text:
        type: string
    type: object
  pipe.RelatedTitlePoster:
    properties:
      height:
        type: integer
      id:
        type: string
      url:
        type: string
      width:
        type: integer
    type: object
  pipe.ReviewAuthor:
    properties:
      id:
        type: string
      nickname:
        type: string
      rating:
        type: integer
    type: object
  pipe.Reviews:
    properties:
      external:
        $ref: '#/definitions/pipe.ExternalReviews'
      featured:
        items:
          $ref: '#/definitions/pipe.FeaturedReviewItem'
        type: array
      users:
        $ref: '#/definitions/pipe.UsersReviews'
    type: object
  pipe.Series:
    properties:
      current:
        $ref: '#/definitions/pipe.SeriesCurrent'
      id:
        $ref: '#/definitions/pipe.SeriesID'
      releaseYear:
        $ref: '#/definitions/pipe.YearRange'
      title:
        $ref: '#/definitions/pipe.SeriesTitle'
    type: object
  pipe.SeriesCurrent:
    properties:
      episode:
        description: episode number (starts from 1)
        type: integer
      season:
        description: season number (starts from 1)
        type: integer
    type: object
  pipe.SeriesID:
    properties:
      episodeNext:
        type: string
      episodePrevious:
        type: string
      parent:
        type: string
    type: object
  pipe.SeriesTitle:
    properties:
      original:
        type: string
      slug:
        type: string
      text:
        type: string
    type: object
  pipe.Soundtrack:
    properties:
      comments:
        items:
          $ref: '#/definitions/pipe.SoundtrackComment'
        type: array
      title:
        type: string
    type: object
  pipe.SoundtrackComment:
    properties:
      html:
        type: string
      text:
        type: string
    type: object
  pipe.Thumbnail:
    properties:
      height:
        type: integer
      url:
        type: string
      width:
        type: integer
    type: object
  pipe.Title:
    properties:
      aka:
        items:
          type: string
        type: array
      original:
        type: string
      slug:
        type: string
      text:
        type: string
    type: object
  pipe.TitleCrazyCreditsTransform:
    properties:
      items:
        items:
          $ref: '#/definitions/pipe.CrazyCreditItem'
        type: array
    type: object
  pipe.TitleKeyword:
    properties:
      id:
        type: string
      slug:
        type: string
      text:
        type: string
    type: object
  pipe.TitleKeywordsTransform:
    properties:
      keywords:
        items:
          $ref: '#/definitions/pipe.TitleKeyword'
        type: array
    type: object
  pipe.TitlePhotoItem:
    properties:
      alt:
        type: string
        x-order: "004"
      caption:
        type: string
        x-order: "005"
      height:
        type: integer
        x-order: "002"
      id:
        type: string
        x-order: "001"
      thumbnail:
        type: string
        x-order: "006"
      width:
        type: integer
        x-order: "003"
    type: object
  pipe.TitlePhotosMeta:
    properties:
      currentPage:
        type: integer
      hasNextPage:
        type: boolean
      itemsPerPage:
        type: integer
      totalItems:
        type: integer
      totalPages:
        type: integer
    type: object
  pipe.TitlePhotosTransform:
    properties:
      meta:
        $ref: '#/definitions/pipe.TitlePhotosMeta'
        x-order: "002"
      photos:
        items:
          $ref: '#/definitions/pipe.TitlePhotoItem'
        type: array
        x-order: "001"
    type: object
  pipe.Trivia:
    properties:
      items:
        items:
          type: string
        type: array
      total:
        type: integer
    type: object
  pipe.UsersReviews:
    properties:
      total:
        type: integer
    type: object
  pipe.Validate:
    properties:
      canHaveEpisodes:
        type: boolean
      isAdult:
        type: boolean
      isEpisode:
        type: boolean
      isMovie:
        type: boolean
      isSeries:
        type: boolean
      type:
        type: string
    type: object
  pipe.VideoItem:
    properties:
      duration:
        type: integer
      id:
        type: string
      thumbnail:
        $ref: '#/definitions/pipe.Thumbnail'
      title:
        type: string
      type:
        $ref: '#/definitions/pipe.VideoTypeWrapper'
    type: object
  pipe.VideoItemPrimary:
    properties:
      description:
        type: string
      duration:
        type: integer
      id:
        type: string
      isMature:
        type: boolean
      playback:
        items:
          $ref: '#/definitions/pipe.PlaybackItem'
        type: array
      thumbnail:
        $ref: '#/definitions/pipe.Thumbnail'
      title:
        type: string
      type:
        $ref: '#/definitions/pipe.VideoTypeWrapper'
    type: object
  pipe.VideoTypeWrapper:
    properties:
      slug:
        type: string
      text:
        type: string
    type: object
  pipe.Videos:
    properties:
      items:
        items:
          $ref: '#/definitions/pipe.VideoItem'
        type: array
      primaries:
        items:
          $ref: '#/definitions/pipe.VideoItemPrimary'
        type: array
      total:
        type: integer
    type: object
  pipe.YearRange:
    properties:
      from:
        type: integer
      to:
        type: integer
    type: object
  server.httpError:
    properties:
      code:
        type: integer
      message:
        type: string
      ok:
        type: boolean
    type: object
info:
  contact:
    name: Repository
    url: https://github.com/Scrip7/imdb-api
  description: Cross-platform microservice to scrape the IMDb website.
  license:
    name: MIT license
    url: https://github.com/Scrip7/imdb-api/blob/main/LICENSE
  title: IMDb-API
paths:
  /chart/box-office:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pipe.BoxOfficeTransform'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.httpError'
      summary: Top Box Office (US)
      tags:
      - Chart
  /chart/common:
    get:
      description: |-
        This endpoint can scrape common chart types that have the same response structure.

        Specifying the chart type based on the table below is required.
        | URL | Page Title | Page Description |
        | --- | --- | --- |
        | `https://imdb.com/chart/top` | IMDb Top 250 Movies | IMDb Top 250 as rated by regular IMDb voters. |
        | `https://imdb.com/chart/toptv` | Top Rated TV Shows | Top 250 as rated by IMDb Users |
        | `https://imdb.com/chart/top-english-movies` | Top Rated English Movies | Top 250 English-language movies as rated by IMDb Users |
        | `https://imdb.com/chart/bottom` | Lowest Rated Movies | Bottom 100 as voted by IMDb Users |
      parameters:
      - description: Chart Type
        enum:
        - top
        - toptv
        - top-english-movies
        - bottom
        in: query
        name: type
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pipe.ChartCommonTransform'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.httpError'
      summary: Scrape common chart types
      tags:
      - Chart
  /chart/moviemeter:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pipe.ChartMovieMeterTransform'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.httpError'
      summary: Most Popular Movies
      tags:
      - Chart
  /title/{id}:
    get:
      description: |-
        The ID should start with "tt" at the beginning.
        | Title Text | IMDb ID |
        | --- | --- |
        | Spider-Man: No Way Home | `tt10872600` |
        | Spider-Man: Far from Home | `tt6320628` |
        | Spider-Man: Homecoming | `tt2250912` |
        | Avengers: Endgame | `tt4154796` |
        | Avengers: Infinity War | `tt4154756` |
        | The Dark Knight | `tt0468569` |
        | The Godfather | `tt0068646` |
        | Friends | `tt0108778` |
        | Breaking Bad | `tt0903747` |
        | Chernobyl | `tt7366338` |
      parameters:
      - description: Title ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pipe.IndexTransform'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.httpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.httpError'
      summary: Get an IMDb title by ID
      tags:
      - Title
  /title/{id}/crazycredits:
    get:
      parameters:
      - description: Title ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pipe.TitleCrazyCreditsTransform'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.httpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.httpError'
      summary: Get titles crazy credits
      tags:
      - Title
  /title/{id}/keywords:
    get:
      parameters:
      - description: Title ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pipe.TitleKeywordsTransform'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.httpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.httpError'
      summary: Get titles keywords
      tags:
      - Title
  /title/{id}/photos:
    get:
      parameters:
      - description: Title ID
        in: path
        name: id
        required: true
        type: string
      - default: "1"
        description: Page Number
        format: integer
        in: query
        name: page
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pipe.TitlePhotosTransform'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.httpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.httpError'
      summary: Titles photos
      tags:
      - Title
  /title/{id}/taglines:
    get:
      parameters:
      - description: Title ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.httpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.httpError'
      summary: Get titles taglines
      tags:
      - Title
produces:
- application/json
swagger: "2.0"
